apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "prometheus-statsd-exporter.fullname" . }}
  labels:
    {{- include "prometheus-statsd-exporter.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "prometheus-statsd-exporter.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
        {{- end}}
      labels:
        {{- include "prometheus-statsd-exporter.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "prometheus-statsd-exporter.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}        
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - --web.listen-address=:{{ .Values.webPort }}
            - --web.telemetry-path=/metrics
            - --statsd.listen-udp=:{{ .Values.udpPort }}
            - --statsd.listen-tcp=:{{ .Values.tcpPort }}
            - --statsd.mapping-config=/etc/{{ template "prometheus-statsd-exporter.name" . }}/statsd-mapping.conf
          ports:
            - name: web
              containerPort: {{ .Values.webPort }}
              protocol: TCP
            - name: statsd-udp
              containerPort: {{ .Values.udpPort }}
              protocol: UDP
            - name: statsd-tcp
              containerPort: {{ .Values.tcpPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /metrics
              port: web
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 30
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: statsd-mapping-config
              mountPath: /etc/{{ template "prometheus-statsd-exporter.name" . }}
      volumes:
        - name: statsd-mapping-config
          configMap:
            name: {{ template "prometheus-statsd-exporter.fullname" . }}-mapping-config
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
