controller:
  image:
    repository: k8s.gcr.io/ingress-nginx/controller
  config:
    enable-modsecurity: "true"
    modsecurity-snippet: |
      SecAuditLog /dev/stdout
      SecAuditLogFormat JSON
      SecDebugLog /var/log/modsec_debug.log
      SecDebugLogLevel 9
      SecRequestBodyLimitAction ProcessPartial
      SecRuleRemoveById 920350
    enable-opentracing: "true"
    enable-owasp-modsecurity-crs: "true"
    gzip-types: "*"
    client-body-buffer-size: 64m
    large-client-header-buffers: "4 16k"
    proxy-body-size: 100m
    proxy-buffers-number: "4"
    proxy-buffer-size: 16k
    proxy_read_timeout: "360"
    proxy_send_timeout: "360"
    use-gzip: "true"
    zipkin-collector-host: jaeger-collector.infra
    zipkin-collector-port: "9411"
  addHeaders:
    Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
    Referrer-Policy: origin
    X-XSS-Protection: 1; mode=block
    X-Frame-Options: SAMEORIGIN
    X-Content-Type-Options: nosniff
    Permissions-Policy: geolocation=(),midi=(),sync-xhr=(self),microphone=(),camera=(),magnetometer=(),gyroscope=(),fullscreen=(self),payment=()
  electionID: ingress-controller-leader
  ingressClass: nginx-internal
  publishService:
    enabled: true
  kind: DaemonSet
  service:
    externalTrafficPolicy: Local
    ports:
      http: 80
      https: 443
    targetPorts:
      http: 80
      https: 443
  metrics:
    port: 10254
    # if this port is changed, change healthz-port: in extraArgs: accordingly
    enabled: true
    serviceMonitor:
      enabled: true
      additionalLabels:
        release: po
    prometheusRule:
      enabled: true
      additionalLabels:
        app: kube-prometheus-stack
        release: po      
      rules:
        - alert: NGINXConfigFailed
          expr: count(nginx_ingress_controller_config_last_reload_successful == 0) > 0
          for: 1s
          labels:
            severity: critical
          annotations:
            description: bad ingress config - nginx config test failed
            summary: uninstall the latest ingress changes to allow config reloads to resume
        - alert: NGINXCertificateExpiry
          expr: (avg(nginx_ingress_controller_ssl_expire_time_seconds) by (host) - time()) < 604800
          for: 1s
          labels:
            severity: critical
          annotations:
            description: ssl certificate(s) will expire in less then a week
            summary: renew expiring certificates to avoid downtime
        - alert: NGINXTooMany500s
          expr: 100 * ( sum( nginx_ingress_controller_requests{status=~"5.+"} ) / sum(nginx_ingress_controller_requests) ) > 5
          for: 1m
          labels:
            severity: warning
          annotations:
            description: Too many 5XXs
            summary: More than 5% of all requests returned 5XX, this requires your attention
        - alert: NGINXTooMany400s
          expr: 100 * ( sum( nginx_ingress_controller_requests{status=~"4.+"} ) / sum(nginx_ingress_controller_requests) ) > 5
          for: 1m
          labels:
            severity: warning
          annotations:
            description: Too many 4XXs
            summary: More than 5% of all requests returned 4XX, this requires your attention
