minio:
  mode: standalone

  existingSecret: minio

  environment:
    MINIO_PROMETHEUS_URL: http://po-kube-prometheus-stack-prometheus.infra.svc:9090

  persistence:
    size: 20Gi
    storageClass: "-"

  resources:
    requests:
      memory: 256Mi

  ingress:
    enabled: false

  consoleIngress:
    enabled: true
    annotations:
      kubernetes.io/tls-acme: "true"
    path: /

  users:
  - accessKey: console
    secretKey: console123
    policy: consoleAdmin

  metrics:
    serviceMonitor:
      enabled: true
      public: true
      additionalLabels:
        release: po

keydb:
  image: docker-mirror.quid.com/eqalpha/keydb:x86_64_v6.2.2
  persistentVolume:
    size: 20Gi
    storageClass: topology-aware-cloud-efficiency

# Overrides the chart's name
nameOverride: null

# Overrides the chart's computed fullname
fullnameOverride: null

kubeVersionOverride: 1.22.3

# Number of replicas for the pod
replicas: 1

# The number of old replicaSets to retain to allow rollback
revisionHistoryLimit: 2

# Annotations for the pod
podAnnotations: {}

# The name of the ServiceAccount to use for the pod
serviceAccountName: ""
#serviceAccountName: '{{ include "halyard.fullname" . }}'

# Image pull secrets for docker images
imagePullSecrets: []

# Pod anti-affinity
affinity: {}

# Tolerations for the pod
tolerations: []

# Node selector for the pod
nodeSelector: {}

# SecurityContext for the pod
podSecurityContext: {}

image:
  # Docker image registry for the image
  registry: us-docker.pkg.dev
  # Docker image repository for the image
  repository: spinnaker-community/docker/halyard
  # Docker image tag for the image
  tag: stable
  # Docker image pull policy
  pullPolicy: Always

# Configures the liveness probe for the container
livenessProbe: {}

# Configures the readiness probe for the container
readinessProbe: {}

# Define command for the container
command: [] 

# Define arguments for the container
args: []

# The SecurityContext for the container
containerSecurityContext: {}

# Environment variables to add to the pod (key: value)
env:
  MINIO_ENDPOINT: 'http://{{ include "halyard.fullname" . }}-minio:9000'
  REDIS_ENDPOINT: 'redis://{{ include "halyard.fullname" . }}-keydb:6379'

 # Environment variables from secrets or configmaps to add to the pod
envFrom:
- secretRef:
    name: minio

# Environment variables from secrets or configmaps to add to the pod
envFrom: []

# Volume mounts to add to the the pod
volumeMounts: [] 

# Resource requests and limits for the pod
resources: {}

# Volumes to add to the pod
volumes: [] 

config: ""

service: 
  enabled: false
  udp:
    enabled: false

ingress: 
  enable: false

ingressList: 
  - annotations:
      kubernetes.io/tls-acme: 'true'
    host: spinnaker.mydomain.com
    ingressClassName: nginx-internal
    service:
      name: spin-deck
      port: 9000
    tls:
      enabled: true
  - annotations:
      kubernetes.io/tls-acme: 'true'
    host: spinnaker-api.mydomain.com
    ingressClassName: nginx-internal
    service:
      name: spin-gate
      port: 8084
    tls:
      enabled: true

persistence:
  enabled: true
  accessMode: ReadWriteOnce
  storageClass: topology-aware-available
  storageSize: 20Gi
