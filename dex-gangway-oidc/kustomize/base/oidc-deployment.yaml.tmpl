apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kube-oidc-proxy
  name: kube-oidc-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kube-oidc-proxy
  template:
    metadata:
      labels:
        app: kube-oidc-proxy
    spec:
      serviceAccountName: kube-oidc-proxy
      containers:
      - image: quay.io/jetstack/kube-oidc-proxy:v0.3.0
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 10
        name: kube-oidc-proxy
        command: ["kube-oidc-proxy"]
        args:
          - "--secure-port=443"
          - "--tls-cert-file=/etc/oidc/tls/tls.crt"
          - "--tls-private-key-file=/etc/oidc/tls/tls.key"
          - "--oidc-client-id=$(OIDC_CLIENT_ID)"
          - "--oidc-issuer-url=$(OIDC_ISSUER_URL)"
          - "--oidc-username-prefix=$(OIDC_USERNAME_PREFIX)"
          - "--oidc-username-claim=$(OIDC_USERNAME_CLAIM)"
          - "--oidc-groups-prefix=$(OIDC_GROUPS_PREFIX)"
          - "--oidc-groups-claim=$(OIDC_GROUPS_CLAIM)"
        env:
        - name: OIDC_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: kube-oidc-proxy-config
              key: oidc.client-id
        - name: OIDC_ISSUER_URL
          valueFrom:
            secretKeyRef:
              name: kube-oidc-proxy-config
              key: oidc.issuer-url
        - name: OIDC_USERNAME_PREFIX
          valueFrom:
            secretKeyRef:
              name: kube-oidc-proxy-config
              key: oidc.username-prefix
        - name: OIDC_USERNAME_CLAIM
          valueFrom:
            secretKeyRef:
              name: kube-oidc-proxy-config
              key: oidc.username-claim
        - name: OIDC_GROUPS_PREFIX
          valueFrom:
            secretKeyRef:
              name: kube-oidc-proxy-config
              key: oidc.groups-prefix
        - name: OIDC_GROUPS_CLAIM
          valueFrom:
            secretKeyRef:
              name: kube-oidc-proxy-config
              key: oidc.groups-claim
        volumeMounts:
        - name: kube-oidc-proxy-tls
          mountPath: /etc/oidc/tls
          readOnly: true
      volumes:
        - name: kube-oidc-proxy-tls
          secret:
            secretName: {{ (ds "values").oidc.url }}-tls 
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kube-oidc-proxy
  name: kube-oidc-proxy
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 443
  type: ClusterIP
  selector:
    app: kube-oidc-proxy
